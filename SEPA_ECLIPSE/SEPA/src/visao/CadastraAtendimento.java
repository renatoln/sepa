/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controle.Controle;
import modelo.bd.AtendimentoDao;
import modelo.bd.BDMySql;
import modelo.bd.PacienteDao;
import modelo.bd.ProntuarioDao;
import modelo.negocio.Atendimento;
import modelo.negocio.Paciente;
import modelo.negocio.Prontuario;
import modelo.negocio.util.Valida;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.negocio.util.Utilidades;

/**
 *
 * @author Lay and Lary
 */
public class CadastraAtendimento extends javax.swing.JDialog {

    /**
     * Creates new form FormAtendimeto
     */
    AtendimentoDao atendimentoDao = new AtendimentoDao();
    ProntuarioDao prontuarioDao = new ProntuarioDao();
    Valida data = new Valida();
    BDMySql bd = BDMySql.getInstance();
    Utilidades ut = new Utilidades();
    private int idAtendimento = -1;
    Controle controle = new Controle();
    private String formato = "dd/MM/yyyy";
     private String formatoh = "HH:mm:ss";
    PacienteDao pacienteDao = new PacienteDao();

    public CadastraAtendimento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public CadastraAtendimento(java.awt.Frame parent, boolean modal, int id) {
        super(parent, modal);
        initComponents();

        preencheTela(id);

        idAtendimento = id;


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        btInserir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jcProntuario = new javax.swing.JComboBox();
        txtData = new javax.swing.JFormattedTextField();
        txtHorario = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane1.setViewportView(txtDescricao);

        btInserir.setText("Inserir");
        btInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInserirActionPerformed(evt);
            }
        });

        jLabel1.setText("Data");

        jLabel2.setText("Horario");

        jLabel3.setText("Descrição");

        jButton1.setText("Cancelar");

        jLabel4.setText("Prontuario");

        jcProntuario.setModel(new DefaultComboBoxModel( prontuarioDao.getProntuarios()));

        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtHorario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jcProntuario, 0, 167, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(8, 8, 8)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btInserir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(txtData, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(txtHorario, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))))
                .addGap(61, 61, 61))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcProntuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btInserir)
                    .addComponent(jButton1))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInserirActionPerformed
        // TODO add your handling code here:
        try {
             ut.removerCaracterEspecial(txtData.getText());
             ut.removerCaracterEspecial(txtHorario.getText());
             
            if (controle.validaData(txtData.getText(), formato)) {//Validação de data

                 if(data.valida_hora(txtHorario.getText(),formatoh)){ //Validação de hora 

                String data = controle.dataBanco(txtData.getText());
                System.out.println(data);
                if(verificarCampos()){
                Atendimento at = new Atendimento(idAtendimento, data, txtHorario.getText(), txtDescricao.getText(),(Prontuario)jcProntuario.getSelectedItem());

                String msn;
                
                if (idAtendimento == -1) {
                    atendimentoDao.cadastraAtendimento(at);

                    msn = "Atendimento cadastrado com sucesso";

                   


                } else {
                    atendimentoDao.atualizaAtendimento(at);
                    msn = "Atendimento atualizada com sucesso";
                }
                fechaJanela(msn);
                   }
                 } else {
                    System.out.println("Não validou");
                   JOptionPane.showMessageDialog(null, "Horário invalido", "Erro de validação", JOptionPane.ERROR_MESSAGE);




                 }
            } else {
                JOptionPane.showMessageDialog(null, "Data invalida", "Erro de validação", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btInserirActionPerformed
        catch (ParseException ex) {
            Logger.getLogger(CadastraAtendimento.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void preencheTela(int id) {
        Atendimento at = atendimentoDao.getAtendimento(id);
        
        txtData.setText(data.getFormatarDataDoBanco(at.getData()));
        txtHorario.setText(at.getHorario());
        txtDescricao.setText(at.getDescricao());
        
        int tam = jcProntuario.getModel().getSize();
        for (int i = 0; i < tam; i++)
                if (((Prontuario)jcProntuario.getModel().getElementAt(i)).getIdProntuario() == at.getProntuario().getIdProntuario()) {
                        jcProntuario.setSelectedIndex(i);
                        break;
                }
 


        btInserir.setText("Atualizar");
    }

    private boolean verificarCampos() {

        String sErro = "";
        boolean erro = false;

        if (txtData.getText().equals("")) {
            sErro = "A data não pode ficar em branco!";
            txtData.grabFocus();
            erro = true;

        } else if (txtHorario.getText().equals("")) {
            sErro = "O Hoarario nao pode ficar em branco!";
            txtHorario.grabFocus();
            erro = true;
        } else if (txtDescricao.getText().equals("")) {
            sErro = "A descrição nao pode ficar em branco!";
            txtDescricao.grabFocus();
            erro = true;
        } 
        if (erro) {
            JOptionPane.showMessageDialog(null, sErro, "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;

    }


    private void fechaJanela(String msn) {
        this.setVisible(false);
        JOptionPane.showMessageDialog(null, msn, "Informação", JOptionPane.INFORMATION_MESSAGE);

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastraAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastraAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastraAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastraAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CadastraAtendimento dialog = new CadastraAtendimento(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btInserir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcProntuario;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JFormattedTextField txtHorario;
    // End of variables declaration//GEN-END:variables
}
